name: AKT

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - "**.md"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    defaults:
      run:
        working-directory: ./src/main/reactjs
    steps:
      - uses: actions/checkout@v2
      - uses: szenius/set-timezone@v1.0
        with:
          timezoneLinux: "Europe/Helsinki"
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Npm Packages
        run: npm ci --ignore-scripts
      - name: Run Linters
        run: npm run lint
      - name: Format
        run: npm run format
      - name: Run Jest Tests
        run: npm run test:jest
      - name: Run Cypress Tests
        uses: cypress-io/github-action@v2
        with:
          working-directory: ./src/main/reactjs
          start: npm run start
          command: npm run test:cypress

  build-backend:
    needs: test-frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: "17"
          distribution: "temurin"
      - uses: szenius/set-timezone@v1.0
        with:
          timezoneLinux: "Europe/Helsinki"
      - name: Build with Maven
        run: mvn clean install
        id: restore-build
        with:
          path: target/akt-*.jar
          key: ${{ github.sha }}

  deploy-container:
    needs: build-backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: target/akt-*.jar
          key: ${{ github.sha }}
      - name: Build Docker container
        shell: bash
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          git clone https://github.com/Opetushallitus/ci-tools.git
          source ci-tools/common/setup-tools.sh
          ls
          ls target
          export ARTIFACT_NAME="akt"
          mv target/akt-*.jar $DOCKER_BUILD_DIR/artifact/${ARTIFACT_NAME}.jar
          cp -vr src/main/resources/oph-configuration $DOCKER_BUILD_DIR/config/
          export BASE_IMAGE="baseimage-fatjar-openjdk17:master"
          ./ci-tools/common/pull-image.sh
          ./ci-tools/github-build/build-fatjar.sh $ARTIFACT_NAME
          ./ci-tools/github-build/upload-image.sh $ARTIFACT_NAME
